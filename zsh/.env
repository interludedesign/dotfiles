#!/usr/bin/env zsh

PYTHON=python3

addToPath() {
  if [[ "$PATH" != *"$1"* ]]; then
    export PATH=$PATH:$1
  fi
}

source_if_exists() {
  if [ -f $1 ]; then
    source $1
  fi
}

function pdocs() {
  cd ~/docs
  git add .
  git commit -m 'Update Docs'
  git push
}

function pldocs() {
  cd ~/docs
  git pull
}

function checkout() {
	git checkout $(git branch | fzf --reverse)
}

function post() {
	curl -X POST -d $1 $2 --header "Content-Type:application/json"
}

function gitls() {
  local RED=$(tput setaf 1)
  local CYAN=$(tput setaf 6)
  local RESET=$(tput sgr0)

  printf "Directory|Current Branch|Last Commit Date|Uncommitted Changes?\n"
  for dir in ./*/; do
    # Skip if not a git repo
    if ! [[ -d $dir/.git ]]; then
      printf "${RED}%s is not a git repo|||${RESET}\n" "$dir"
      continue
    fi

    # Skip if no commits
    if ! git -C "$dir" rev-parse --quiet --verify HEAD >/dev/null; then
      printf "${RED}%s has no commits yet|||${RESET}\n" "$dir"
      continue
    fi

    changes_present_label=""
    current_branch=$(git -C "$dir" rev-parse --abbrev-ref HEAD)
    # Get the date of the most recent commit
    last_commit_date=$(git -C "$dir" log -1 --format=%cd --date=short)
    number_of_files_changed=$(git -C "$dir" status --short | wc -l)

    if [[ $number_of_files_changed -gt 0 ]]; then
      changes_present_label="${CYAN}Changes${RESET}"
    fi

    printf "%s|%s|%s|%s\n" "$dir" "$current_branch" "$last_commit_date" "$changes_present_label"
  done | column -t -s'|'
}

# Function to kill PostgreSQL, as it seems to fall over a lot
function kill-pg() {
kill -9 $(head -n 1 /opt/homebrew/var/postgres/postmaster.pid)
}
alias kill-postgres="kill-pg"
alias restart-pg="brew services restart postgresql@14"
alias tail-pg="tail -f /opt/homebrew/var/log/postgresql@14.log"

function spec() {
	bundle exec rspec "$1" --format documentation --require $HOME/.local/bin/quickfix_formatter.rb --format QuickfixFormatter --out /tmp/quickfix.out
}
